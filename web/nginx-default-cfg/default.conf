server {
  listen       80;
  server_name  web;
  resolver 8.8.8.8 valid=2s ipv6=off;
  resolver_timeout 11s;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

  # disbled caching so the browser won't cache the site.
  expires           0;
  add_header        Cache-Control private;

  location / {
      root   /usr/local/openresty/nginx/html;
      index  index.html index.htm;
  }

  # setting this variable to ngx module so that can be used by LUA
  set $user_id "unknown";

  access_by_lua '
    local keycloak_base_url = "https://access-sso.apps.ocp4.rhocplab.com/"
    local client_id = "mrt"
    local realm = "rh"
    local secret = "16176248-66ac-45c8-9e61-81133456ccdd"
    local app_url = "https://app-mrt.apps.ocp4.rhocplab.com/"

    local opts = {
      redirect_uri_path = "/redirect_uri",
      ssl_verify = "no",
      accept_none_alg = true,
      discovery = keycloak_base_url .. "auth/realms/" .. realm .. "/.well-known/openid-configuration",
      client_id = client_id,
      client_secret = secret,
      redirect_uri_scheme = "http",
      logout_path = "/logout",
      redirect_after_logout_uri = keycloak_base_url .. "auth/realms/" .. realm .. "/protocol/openid-connect/logout?redirect_uri=" .. app_url,
      redirect_after_logout_with_id_token_hint = false,
      session_contents = {id_token=true}
    }

    -- call introspect for OAuth 2.0 Bearer Access Token validation
    local res, err = require("resty.openidc").authenticate(opts)
    if err then
      ngx.status = 403
      ngx.say(err)
      ngx.exit(ngx.HTTP_FORBIDDEN)
    end

    -- save username in the ngx variable named user_id
    local tkn = res["id_token"]
    ngx.var.user_id = tkn["preferred_username"]

  ';


  location /api {
    proxy_set_header X-User $user_id;
    proxy_pass http://ersamurai:8081;
    rewrite ^/api(.*)$ $1 break;
  }

  error_page 404 /404.html;
    location = /40x.html {
  }

  # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/local/openresty/nginx/html;
  }

}
